<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Freya的个人博客</title>
    <link>gofee.me/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>淡然，灵动，洒脱</description>
    <pubDate>Tue, 25 Jul 2017 15:10:38 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>test</title>
      <link>gofee.me/2017/07/25/test/</link>
      <guid>gofee.me/2017/07/25/test/</guid>
      <pubDate>Tue, 25 Jul 2017 15:07:46 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;/25/test/avatar.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

      
      </description>
      
      <content:encoded><![CDATA[<p><img src="/25/test/avatar.jpg" alt=""></p>
]]></content:encoded>
      
      <comments>gofee.me/2017/07/25/test/#disqus_thread</comments>
    </item>
    
    <item>
      <title>AFNetworking README 中文版</title>
      <link>gofee.me/2017/01/25/AFNetworking-translate/</link>
      <guid>gofee.me/2017/01/25/AFNetworking-translate/</guid>
      <pubDate>Wed, 25 Jan 2017 12:23:15 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;AFNetworking-README-中文版&quot;&gt;&lt;a href=&quot;#AFNetworking-README-中文版&quot; class=&quot;headerlink&quot; title=&quot;AFNetworking README 中文版&quot;&gt;&lt;/a&gt;AFNetworking READ
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="AFNetworking-README-中文版"><a href="#AFNetworking-README-中文版" class="headerlink" title="AFNetworking README 中文版"></a>AFNetworking README 中文版</h1><p>AFNetworking是iOS和Mac OS X平台上的轻量级网络库，在Foudation URL加载系统基础上构建，对构建于Cocoa的强大高级的网络抽象进行了扩充。它具有设计良好的、富有特性的、模块化结构的API接口集。</p>
<h2 id="体系结构"><a href="#体系结构" class="headerlink" title="体系结构"></a>体系结构</h2><h3 id="NSURLSession-会话"><a href="#NSURLSession-会话" class="headerlink" title="NSURLSession 会话"></a>NSURLSession 会话</h3><ul>
<li>AFURLSessionManager</li>
<li>AFHTTPSessionManager</li>
</ul>
<h3 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h3><ul>
<li><afurlrequestserialization><ul>
<li>AFHTTPRequestSerializer</li>
<li>AFJSONRequestSerializer</li>
<li>AFPropertyListRequestSerializer</li>
</ul>
</afurlrequestserialization></li>
<li><afurlresponsesirialization><ul>
<li>AFHTTPResponseSerializer</li>
<li>AFJSONResponseSerializer</li>
<li>AFXMLParserResponseSerializer</li>
<li>AFXMLDocumentResponseSerializer(Mac OS X)</li>
<li>AFPropertyListResponseSerializer</li>
<li>AFImageResponseSerializer</li>
<li>AFCompoundResponseSerializer</li>
</ul>
</afurlresponsesirialization></li>
</ul>
<h3 id="其他功能"><a href="#其他功能" class="headerlink" title="其他功能"></a>其他功能</h3><ul>
<li>AFSecurityPolicy</li>
<li>AFNetworkReachabilityManager</li>
</ul>
<h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><h3 id="AFURLSessionManager"><a href="#AFURLSessionManager" class="headerlink" title="AFURLSessionManager"></a>AFURLSessionManager</h3><p>AFURLSessionManager在一个定义好的NSURLSessionConfiguration对象基础上创建并管理一个NSURLSession对象, NSURLSessionConfiguration遵循<nsurlsessiontaskdelegate>, <nsurlsessiondatadelegate>, <nsurlsessiondownloaddelegate>, <nsurlsessiondelegate>协议.</nsurlsessiondelegate></nsurlsessiondownloaddelegate></nsurlsessiondatadelegate></nsurlsessiontaskdelegate></p>
<h4 id="创建一个下载任务"><a href="#创建一个下载任务" class="headerlink" title="创建一个下载任务"></a>创建一个下载任务</h4><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">NSURLSessionConfiguration</span> *configuration = [<span class="built_in">NSURLSessionConfiguration</span> defaultSessionConfiguration];</div><div class="line">AFURLSessionManager *manager = [[AFURLSessionManager alloc] initWithSessionConfiguration:configuration];</div><div class="line"><span class="built_in">NSURL</span> *URL = [<span class="built_in">NSURL</span> URLWithString:<span class="string">@"http://example.com/download.zip"</span>];</div><div class="line"><span class="built_in">NSURLRequest</span> *request = [<span class="built_in">NSURLRequest</span> requestWithURL:URL];</div><div class="line"><span class="built_in">NSURLSessionDownloadTask</span> *downloadTask = [manager downloadTaskWithRequest:request progress:<span class="literal">nil</span> destination:^<span class="built_in">NSURL</span> *(<span class="built_in">NSURL</span> *targetPath, <span class="built_in">NSURLResponse</span> *response) &#123;</div><div class="line">    <span class="built_in">NSURL</span> *documentsDirectoryURL = [[<span class="built_in">NSFileManager</span> defaultManager] URLForDirectory:<span class="built_in">NSDocumentDirectory</span> inDomain:<span class="built_in">NSUserDomainMask</span> appropriateForURL:<span class="literal">nil</span> create:<span class="literal">NO</span> error:<span class="literal">nil</span>];</div><div class="line">    <span class="keyword">return</span> [documentsDirectoryURL URLByAppendingPathComponent:[response suggestedFilename]];</div><div class="line">&#125; completionHandler:^(<span class="built_in">NSURLResponse</span> *response, <span class="built_in">NSURL</span> *filePath, <span class="built_in">NSError</span> *error) &#123;</div><div class="line">    <span class="built_in">NSLog</span>(<span class="string">@"File downloaded to: %@"</span>, filePath);</div><div class="line">&#125;];</div><div class="line">[downloadTask resume];</div></pre></td></tr></table></figure>
<h4 id="创建一个上传任务"><a href="#创建一个上传任务" class="headerlink" title="创建一个上传任务"></a>创建一个上传任务</h4><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">NSURLSessionConfiguration</span> *configuration = [<span class="built_in">NSURLSessionConfiguration</span> defaultSessionConfiguration];</div><div class="line">AFURLSessionManager *manager = [[AFURLSessionManager alloc] initWithSessionConfiguration:configuration];</div><div class="line"><span class="built_in">NSURL</span> *URL = [<span class="built_in">NSURL</span> URLWithString:<span class="string">@"http://example.com/upload"</span>];</div><div class="line"><span class="built_in">NSURLRequest</span> *request = [<span class="built_in">NSURLRequest</span> requestWithURL:URL];</div><div class="line"><span class="built_in">NSURL</span> *filePath = [<span class="built_in">NSURL</span> fileURLWithPath:<span class="string">@"file://path/to/image.png"</span>];</div><div class="line"><span class="built_in">NSURLSessionUploadTask</span> *uploadTask = [manager uploadTaskWithRequest:request fromFile:filePath progress:<span class="literal">nil</span> completionHandler:^(<span class="built_in">NSURLResponse</span> *response, <span class="keyword">id</span> responseObject, <span class="built_in">NSError</span> *error) &#123;</div><div class="line">    <span class="keyword">if</span> (error) &#123;</div><div class="line">        <span class="built_in">NSLog</span>(<span class="string">@"Error: %@"</span>, error);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="built_in">NSLog</span>(<span class="string">@"Success: %@ %@"</span>, response, responseObject);</div><div class="line">    &#125;</div><div class="line">&#125;];</div><div class="line">[uploadTask resume];</div></pre></td></tr></table></figure>
<h4 id="创建一个多表单请求的上传任务，带进度条"><a href="#创建一个多表单请求的上传任务，带进度条" class="headerlink" title="创建一个多表单请求的上传任务，带进度条"></a>创建一个多表单请求的上传任务，带进度条</h4><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">NSMutableURLRequest</span> *request = [[AFHTTPRequestSerializer serializer] multipartFormRequestWithMethod:<span class="string">@"POST"</span> URLString:<span class="string">@"http://example.com/upload"</span> parameters:<span class="literal">nil</span> constructingBodyWithBlock:^(<span class="keyword">id</span>&lt;AFMultipartFormData&gt; formData) &#123;</div><div class="line">        [formData appendPartWithFileURL:[<span class="built_in">NSURL</span> fileURLWithPath:<span class="string">@"file://path/to/image.jpg"</span>] name:<span class="string">@"file"</span> fileName:<span class="string">@"filename.jpg"</span> mimeType:<span class="string">@"image/jpeg"</span> error:<span class="literal">nil</span>];</div><div class="line">    &#125; error:<span class="literal">nil</span>];</div><div class="line">AFURLSessionManager *manager = [[AFURLSessionManager alloc] initWithSessionConfiguration:[<span class="built_in">NSURLSessionConfiguration</span> defaultSessionConfiguration]];</div><div class="line"><span class="built_in">NSURLSessionUploadTask</span> *uploadTask;</div><div class="line">uploadTask = [manager</div><div class="line">              uploadTaskWithStreamedRequest:request</div><div class="line">              progress:^(<span class="built_in">NSProgress</span> * _Nonnull uploadProgress) &#123;</div><div class="line">                  <span class="comment">// This is not called back on the main queue.</span></div><div class="line">                  <span class="comment">// You are responsible for dispatching to the main queue for UI updates</span></div><div class="line">                  <span class="built_in">dispatch_async</span>(dispatch_get_main_queue(), ^&#123;</div><div class="line">                      <span class="comment">//Update the progress view</span></div><div class="line">                      [progressView setProgress:uploadProgress.fractionCompleted];</div><div class="line">                  &#125;);</div><div class="line">              &#125;</div><div class="line">              completionHandler:^(<span class="built_in">NSURLResponse</span> * _Nonnull response, <span class="keyword">id</span>  _Nullable responseObject, <span class="built_in">NSError</span> * _Nullable error) &#123;</div><div class="line">                  <span class="keyword">if</span> (error) &#123;</div><div class="line">                      <span class="built_in">NSLog</span>(<span class="string">@"Error: %@"</span>, error);</div><div class="line">                  &#125; <span class="keyword">else</span> &#123;</div><div class="line">                      <span class="built_in">NSLog</span>(<span class="string">@"%@ %@"</span>, response, responseObject);</div><div class="line">                  &#125;</div><div class="line">              &#125;];</div><div class="line">[uploadTask resume];</div></pre></td></tr></table></figure>
<h4 id="创建一个数据任务"><a href="#创建一个数据任务" class="headerlink" title="创建一个数据任务"></a>创建一个数据任务</h4><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">NSURLSessionConfiguration</span> *configuration = [<span class="built_in">NSURLSessionConfiguration</span> defaultSessionConfiguration];</div><div class="line">AFURLSessionManager *manager = [[AFURLSessionManager alloc] initWithSessionConfiguration:configuration];</div><div class="line"><span class="built_in">NSURL</span> *URL = [<span class="built_in">NSURL</span> URLWithString:<span class="string">@"http://httpbin.org/get"</span>];</div><div class="line"><span class="built_in">NSURLRequest</span> *request = [<span class="built_in">NSURLRequest</span> requestWithURL:URL];</div><div class="line"><span class="built_in">NSURLSessionDataTask</span> *dataTask = [manager dataTaskWithRequest:request completionHandler:^(<span class="built_in">NSURLResponse</span> *response, <span class="keyword">id</span> responseObject, <span class="built_in">NSError</span> *error) &#123;</div><div class="line">    <span class="keyword">if</span> (error) &#123;</div><div class="line">        <span class="built_in">NSLog</span>(<span class="string">@"Error: %@"</span>, error);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="built_in">NSLog</span>(<span class="string">@"%@ %@"</span>, response, responseObject);</div><div class="line">    &#125;</div><div class="line">&#125;];</div><div class="line">[dataTask resume];</div></pre></td></tr></table></figure>
<hr>
<h3 id="请求序列化"><a href="#请求序列化" class="headerlink" title="请求序列化"></a>请求序列化</h3><p>请求序列化器通过将参数编码为字符串或HTTP请求体，结合URL字符串创建一个请求。</p>
<h4 id="字符串格式的参数编码"><a href="#字符串格式的参数编码" class="headerlink" title="字符串格式的参数编码"></a>字符串格式的参数编码</h4><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[[AFHTTPRequestSerializer serializer] requestWithMethod:<span class="string">@"GET"</span> URLString:URLString parameters:parameters error:<span class="literal">nil</span>];</div></pre></td></tr></table></figure>
<p><code>GET http://example.com?foo=bar&amp;baz[]=1&amp;baz[]=2&amp;baz[]=3</code></p>
<h4 id="URL格式的参数编码"><a href="#URL格式的参数编码" class="headerlink" title="URL格式的参数编码"></a>URL格式的参数编码</h4><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[[AFHTTPRequestSerializer serializer] requestWithMethod:<span class="string">@"POST"</span> URLString:URLString parameters:parameters error:<span class="literal">nil</span>];</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">POST http://example.com/</div><div class="line">Content-Type: application/x-www-form-urlencoded</div><div class="line">foo=bar&amp;baz[]=1&amp;baz[]=2&amp;baz[]=3</div></pre></td></tr></table></figure>
<h4 id="JSON格式的参数编码"><a href="#JSON格式的参数编码" class="headerlink" title="JSON格式的参数编码"></a>JSON格式的参数编码</h4><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[[AFJSONRequestSerializer serializer] requestWithMethod:<span class="string">@"POST"</span> URLString:URLString parameters:parameters error:<span class="literal">nil</span>];</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">POST http://example.com/</div><div class="line">Content-Type: application/json</div><div class="line">&#123;&quot;foo&quot;: &quot;bar&quot;, &quot;baz&quot;: [1,2,3]&#125;</div></pre></td></tr></table></figure>
<h3 id="网络可达性管理"><a href="#网络可达性管理" class="headerlink" title="网络可达性管理"></a>网络可达性管理</h3><p>AFNetworkReachabilityManager监控WWAN和WiFi的网络可达性。</p>
<ul>
<li>不要使用Reachability决定是否发送原始请求；<ul>
<li>应该尝试重发。</li>
</ul>
</li>
<li>可以使用Reachability决定一个请求在什么时候自动重发；<ul>
<li>虽然可能请求失败，但一个网络可达的Reachability通知是重新请求某些事物的好时候。</li>
</ul>
</li>
<li>网络可达管理器是个很有用的工具，可以确定一个请求为什么失败。<ul>
<li>一个网络请求失败后，通知用户“断线了”，比返回“请求超时”这种更技术更精确的错误要好。</li>
</ul>
</li>
</ul>
<p>参考 <wwdc 2012="" session="" 706,="" “networking="" best="" practices.”="">(<a href="https://developer.apple.com/videos/play/wwdc2012-706/" target="_blank" rel="external">https://developer.apple.com/videos/play/wwdc2012-706/</a>).</wwdc></p>
<h4 id="共享的网络可达性管理器"><a href="#共享的网络可达性管理器" class="headerlink" title="共享的网络可达性管理器"></a>共享的网络可达性管理器</h4><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[[AFNetworkReachabilityManager sharedManager] setReachabilityStatusChangeBlock:^(AFNetworkReachabilityStatus status) &#123;</div><div class="line">    <span class="built_in">NSLog</span>(<span class="string">@"Reachability: %@"</span>, AFStringFromNetworkReachabilityStatus(status));</div><div class="line">&#125;];</div><div class="line">[[AFNetworkReachabilityManager sharedManager] startMonitoring];</div></pre></td></tr></table></figure>
<h3 id="安全策略"><a href="#安全策略" class="headerlink" title="安全策略"></a>安全策略</h3><p>在你的APP里添加pinned X.509证书会帮你避免人为攻击和其他漏洞扫描。当应用处理敏感的用户数据或金融信息时，非常需要在具有SSL证书的HTTPS连接中执行所有操作。</p>
<p>####允许无效SSL证书</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];</div><div class="line">manager.securityPolicy.allowInvalidCertificates = <span class="literal">YES</span>; <span class="comment">// not recommended for production</span></div></pre></td></tr></table></figure>
]]></content:encoded>
      
      <comments>gofee.me/2017/01/25/AFNetworking-translate/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
